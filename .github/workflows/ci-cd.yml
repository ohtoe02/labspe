name: CI/CD Research Pipeline

on: [push, pull_request]

jobs:
  # 1. Базовый пайплайн без кэширования
  basic-pipeline:
    name: "1. Basic Pipeline (No Cache)"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies (No Cache)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pylint
        run: pylint main.py

      - name: Run tests
        run: python -m pytest test_main.py -v

      - name: Basic security check
        run: echo "No security checks in basic pipeline"

  # 2. Пайплайн с кэшированием
  cached-pipeline:
    name: "2. Pipeline with Caching"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache Python dependencies
        uses: actions/cache@v4
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies (With Cache)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pylint
        run: pylint main.py

      - name: Run tests
        run: python -m pytest test_main.py -v

      - name: Cache status
        run: |
          if [ "${{ steps.pip-cache.outputs.cache-hit }}" == "true" ]; then
            echo "Cache HIT - dependencies loaded from cache"
          else
            echo "Cache MISS - dependencies downloaded fresh"
          fi

  # 3. Полный пайплайн: кэширование + SonarQube + безопасность
  full-pipeline:
    name: "3. Cache + SonarQube + Security"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Для SonarQube

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pylint
        run: pylint main.py

      - name: Run tests with coverage
        run: |
          python -m pytest test_main.py -v --cov=main --cov-report=xml --cov-report=term

      - name: Security analysis with Bandit
        run: |
          bandit -r main.py -f json -o bandit-report.json || true

      - name: Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report
          path: bandit-report.json

      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

