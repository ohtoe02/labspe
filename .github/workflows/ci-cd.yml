name: CI/CD Pipeline Research

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  basic-pipeline:
    name: "1. Basic Pipeline (No Cache)"
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Python dependencies (No Cache)
      working-directory: ./ВяткинСЮ/backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx
        
    - name: Install Node.js dependencies (No Cache)
      working-directory: ./ВяткинСЮ/frontend
      run: |
        npm ci
        
    - name: Run Python tests
      working-directory: ./ВяткинСЮ/backend
      run: |
        python -m pytest tests/ -v
        
    - name: Run Node.js tests
      working-directory: ./ВяткинСЮ/frontend
      run: |
        npm test -- --coverage --watchAll=false
        
    - name: Build Docker images (No Cache)
      working-directory: ./ВяткинСЮ
      run: |
        docker build -t webapp-backend:basic ./backend
        docker build -t webapp-frontend:basic ./frontend
        docker build -t webapp-nginx:basic ./nginx

  cached-pipeline:
    name: "2. Pipeline with Caching"
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './ВяткинСЮ/frontend/package-lock.json'
        
    - name: Install Python dependencies (With Cache)
      working-directory: ./ВяткинСЮ/backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx
        
    - name: Install Node.js dependencies (With Cache)
      working-directory: ./ВяткинСЮ/frontend
      run: |
        npm ci
        
    - name: Run Python tests
      working-directory: ./ВяткинСЮ/backend
      run: |
        python -m pytest tests/ -v
        
    - name: Run Node.js tests
      working-directory: ./ВяткинСЮ/frontend
      run: |
        npm test -- --coverage --watchAll=false
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Backend Image (With Cache)
      uses: docker/build-push-action@v5
      with:
        context: ./ВяткинСЮ/backend
        push: false
        tags: webapp-backend:cached
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build Frontend Image (With Cache)
      uses: docker/build-push-action@v5
      with:
        context: ./ВяткинСЮ/frontend
        push: false
        tags: webapp-frontend:cached
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build Nginx Image (With Cache)
      uses: docker/build-push-action@v5
      with:
        context: ./ВяткинСЮ/nginx
        push: false
        tags: webapp-nginx:cached
        cache-from: type=gha
        cache-to: type=gha,mode=max

  cached-with-sonar:
    name: "3. Cache + SonarQube"
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better SonarCloud analysis
        
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './ВяткинСЮ/frontend/package-lock.json'
        
    - name: Install Python dependencies
      working-directory: ./ВяткинСЮ/backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx pytest-cov
        
    - name: Install Node.js dependencies
      working-directory: ./ВяткинСЮ/frontend
      run: |
        npm ci
        
    - name: Run Python tests with coverage
      working-directory: ./ВяткинСЮ/backend
      run: |
        python -m pytest tests/ --cov=. --cov-report=xml --cov-report=term
        
    - name: Run JavaScript tests with coverage
      working-directory: ./ВяткинСЮ/frontend
      run: |
        npm test -- --coverage --watchAll=false
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker images (With Cache)
      uses: docker/build-push-action@v5
      with:
        context: ./ВяткинСЮ/backend
        push: false
        tags: webapp-backend:sonar
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: ./ВяткинСЮ 