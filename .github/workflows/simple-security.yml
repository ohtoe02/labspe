name: Simple Security Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  simple-security:
    name: Simple Security Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Auto-discover and install
      run: |
        echo "🔍 Discovering project structure..."
        
        # Поиск requirements.txt файлов
        if find . -name "requirements.txt" | head -1; then
          echo "📦 Installing from requirements.txt files..."
          find . -name "requirements.txt" -exec pip install -r {} \;
        fi
        
        # Установка security tools
        echo "🛡️ Installing security tools..."
        pip install bandit safety flake8 pylint pip-audit
        
        echo "✅ Installation complete"
        
    - name: Run all security checks
      run: |
        echo "🚀 Starting comprehensive security scan..."
        
        # Bandit - Static security analysis
        echo "🔍 Bandit scan..."
        bandit -r . -f txt --severity-level medium || true
        bandit -r . -f json -o bandit-report.json || true
        
        # Safety - Dependency vulnerabilities
        echo "🔍 Safety scan..."
        safety check || true
        safety check --json > safety-report.json 2>/dev/null || true
        
        # pip-audit - Additional dependency check
        echo "🔍 pip-audit scan..."
        pip-audit || true
        pip-audit --format=json --output=pip-audit-report.json || true
        
        # Flake8 - Code quality
        echo "🔍 Code quality check..."
        flake8 . --max-line-length=127 --statistics || true
        
        # Pylint - если есть app.py
        if find . -name "app.py" | head -1 > /dev/null; then
          echo "🔍 Pylint analysis..."
          find . -name "app.py" | head -1 | xargs pylint --exit-zero || true
        fi
        
        echo "✅ All security checks completed"
      continue-on-error: true
      
    - name: Secrets scan
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true
      
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: simple-security-reports-${{ github.run_number }}
        path: |
          bandit-report.json
          safety-report.json
          pip-audit-report.json
        retention-days: 15
        
    - name: Final summary
      if: always()
      run: |
        echo "# 🛡️ Simple Security Demo Results" >> $GITHUB_STEP_SUMMARY
        echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🔍 Tools Executed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Bandit** - Python static analysis" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Safety** - Dependency vulnerabilities" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **pip-audit** - Additional dependency scan" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Flake8** - Code quality" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **GitLeaks** - Secret detection" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📁 Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "JSON reports available in workflow artifacts" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## ⚠️ Educational Note" >> $GITHUB_STEP_SUMMARY
        echo "This simple Flask app contains intentional vulnerabilities for learning purposes." >> $GITHUB_STEP_SUMMARY 