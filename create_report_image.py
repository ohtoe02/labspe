#!/usr/bin/env python3
"""
Script to create a visual security report image
"""

from PIL import Image, ImageDraw, ImageFont
import json
import os

def create_security_report_image():
    """Create a visual security report image"""
    
    # Image dimensions
    width = 1200
    height = 1600
    background_color = (255, 255, 255)
    
    # Create image
    img = Image.new('RGB', (width, height), background_color)
    draw = ImageDraw.Draw(img)
    
    # Try to use a better font, fallback to default
    try:
        title_font = ImageFont.truetype("arial.ttf", 32)
        header_font = ImageFont.truetype("arial.ttf", 24)
        text_font = ImageFont.truetype("arial.ttf", 16)
        small_font = ImageFont.truetype("arial.ttf", 12)
    except:
        title_font = ImageFont.load_default()
        header_font = ImageFont.load_default()
        text_font = ImageFont.load_default()
        small_font = ImageFont.load_default()
    
    # Colors
    title_color = (0, 51, 102)  # Dark blue
    header_color = (51, 102, 153)  # Blue
    text_color = (0, 0, 0)  # Black
    critical_color = (220, 20, 60)  # Crimson
    warning_color = (255, 140, 0)  # Orange
    success_color = (34, 139, 34)  # Forest green
    
    y_offset = 50
    
    # Title
    title = "–ü–†–ê–ö–¢–ò–ö–ê 207: –û–¢–ß–ï–¢ –ü–û –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò"
    title_bbox = draw.textbbox((0, 0), title, font=title_font)
    title_width = title_bbox[2] - title_bbox[0]
    draw.text(((width - title_width) // 2, y_offset), title, fill=title_color, font=title_font)
    y_offset += 80
    
    # Student info
    student_info = "–í—ã–ø–æ–ª–Ω–∏–ª: –í—è—Ç–∫–∏–Ω –°–µ—Ä–≥–µ–π –Æ—Ä—å–µ–≤–∏—á | –î–∞—Ç–∞: 18.06.2025"
    info_bbox = draw.textbbox((0, 0), student_info, font=text_font)
    info_width = info_bbox[2] - info_bbox[0]
    draw.text(((width - info_width) // 2, y_offset), student_info, fill=text_color, font=text_font)
    y_offset += 60
    
    # Project description
    draw.text((50, y_offset), "–û–ü–ò–°–ê–ù–ò–ï –ü–†–û–ï–ö–¢–ê:", fill=header_color, font=header_font)
    y_offset += 35
    
    description_lines = [
        "‚Ä¢ Flask –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –Ω–∞–º–µ—Ä–µ–Ω–Ω—ã–º–∏ —É—è–∑–≤–∏–º–æ—Å—Ç—è–º–∏",
        "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤, –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
        "‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ CI/CD",
        "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å Prometheus –∏ Grafana"
    ]
    
    for line in description_lines:
        draw.text((70, y_offset), line, fill=text_color, font=text_font)
        y_offset += 25
    
    y_offset += 30
    
    # Security tools section
    draw.text((50, y_offset), "–ò–ù–°–¢–†–£–ú–ï–ù–¢–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò:", fill=header_color, font=header_font)
    y_offset += 35
    
    # Bandit results
    draw.text((70, y_offset), "1. BANDIT - –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ Python –∫–æ–¥–∞", fill=text_color, font=text_font)
    y_offset += 25
    draw.text((90, y_offset), "‚úì –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ 12 —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π", fill=critical_color, font=text_font)
    y_offset += 20
    draw.text((90, y_offset), "‚Ä¢ –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫: 6 (Command Injection, MD5, Debug Mode)", fill=critical_color, font=small_font)
    y_offset += 18
    draw.text((90, y_offset), "‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫: 2 (SQL Injection, Network Binding)", fill=warning_color, font=small_font)
    y_offset += 18
    draw.text((90, y_offset), "‚Ä¢ –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫: 4 (Subprocess, Hardcoded secrets)", fill=text_color, font=small_font)
    y_offset += 35
    
    # Safety results
    draw.text((70, y_offset), "2. SAFETY - –ê–Ω–∞–ª–∏–∑ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö", fill=text_color, font=text_font)
    y_offset += 25
    draw.text((90, y_offset), "‚úì –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ 6 —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö", fill=critical_color, font=text_font)
    y_offset += 20
    draw.text((90, y_offset), "‚Ä¢ Werkzeug < 3.0.6: DoS, Path Traversal, Code Execution", fill=critical_color, font=small_font)
    y_offset += 18
    draw.text((90, y_offset), "‚Ä¢ Bandit < 1.7.7: SQL Injection detection issues", fill=warning_color, font=small_font)
    y_offset += 35
    
    # CI/CD Pipeline
    draw.text((70, y_offset), "3. CI/CD PIPELINE - GitHub Actions", fill=text_color, font=text_font)
    y_offset += 25
    draw.text((90, y_offset), "‚úì –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", fill=success_color, font=text_font)
    y_offset += 20
    draw.text((90, y_offset), "‚Ä¢ Security Analysis (Bandit, Safety, pip-audit)", fill=text_color, font=small_font)
    y_offset += 18
    draw.text((90, y_offset), "‚Ä¢ Docker Security (Trivy scanner)", fill=text_color, font=small_font)
    y_offset += 18
    draw.text((90, y_offset), "‚Ä¢ Secrets Detection (GitLeaks)", fill=text_color, font=small_font)
    y_offset += 18
    draw.text((90, y_offset), "‚Ä¢ OWASP Dependency Check", fill=text_color, font=small_font)
    y_offset += 35
    
    # Key vulnerabilities
    draw.text((50, y_offset), "–ö–õ–Æ–ß–ï–í–´–ï –£–Ø–ó–í–ò–ú–û–°–¢–ò:", fill=header_color, font=header_font)
    y_offset += 35
    
    vulnerabilities = [
        ("üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï:", critical_color, [
            "SQL Injection –≤ —Ñ–æ—Ä–º–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (CWE-89)",
            "Command Injection –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (CWE-78)",
            "MD5 —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π (CWE-327)",
            "Debug —Ä–µ–∂–∏–º –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ (CWE-94)"
        ]),
        ("üü° –í–ê–ñ–ù–´–ï:", warning_color, [
            "–ù–µ–±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ (CWE-434)",
            "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ (CWE-732)",
            "–•–∞—Ä–¥–∫–æ–¥ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π (CWE-259)"
        ]),
        ("üü¢ –ò–°–ü–†–ê–í–õ–ï–ù–û:", success_color, [
            "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫",
            "–°–æ–∑–¥–∞–Ω comprehensive security pipeline",
            "–î–æ–±–∞–≤–ª–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        ])
    ]
    
    for category, color, items in vulnerabilities:
        draw.text((70, y_offset), category, fill=color, font=text_font)
        y_offset += 25
        for item in items:
            draw.text((90, y_offset), f"‚Ä¢ {item}", fill=text_color, font=small_font)
            y_offset += 18
        y_offset += 15
    
    # Results summary
    draw.text((50, y_offset), "–ò–¢–û–ì–ò:", fill=header_color, font=header_font)
    y_offset += 35
    
    summary_items = [
        "‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã 5 –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
        "‚úÖ –°–æ–∑–¥–∞–Ω CI/CD pipeline —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏",
        "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ 18 —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π —Ä–∞–∑–ª–∏—á–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è",
        "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π",
        "‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –¥–ª—è educational purposes"
    ]
    
    for item in summary_items:
        draw.text((70, y_offset), item, fill=success_color, font=text_font)
        y_offset += 25
    
    y_offset += 30
    
    # Footer
    footer_text = "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–º–µ—Ä–µ–Ω–Ω—ã–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è"
    footer_bbox = draw.textbbox((0, 0), footer_text, font=text_font)
    footer_width = footer_bbox[2] - footer_bbox[0]
    draw.text(((width - footer_width) // 2, y_offset), footer_text, fill=critical_color, font=text_font)
    
    # Save image
    img.save('Report.png', 'PNG', quality=95)
    print("‚úÖ Security report image created: Report.png")

if __name__ == "__main__":
    create_security_report_image() 